services:
  pg:
    image: postgres
    container_name: comics-platform-database
    environment:
      - POSTGRES_USER=$DATABASE_USER
      - POSTGRES_PASSWORD=$DATABASE_PASSWORD
      - POSTGRES_DB=$DATABASE_NAME
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
  backend:
    build:
      context: .
      dockerfile: dockerfiles/nest.Dockerfile
    container_name: comics-platform-backend
    depends_on:
      - pg
    ports:
      - "3000:3000"
    volumes:
      - ./comics-platform-backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - EMAIL_HOST=$EMAIL_HOST
      - EMAIL_PORT=$EMAIL_PORT
      - EMAIL_USER=$EMAIL_USER
      - EMAIL_PASSWORD=$EMAIL_PASSWORD
      - FRONTEND_URL=$FRONTEND_URL
      - JWT_SECRET=$JWT_SECRET
      - JWT_EXPIRES_IN=$JWT_EXPIRES_IN
      - CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME
      - CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY
      - CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET
      - DATABASE_HOST=$DATABASE_HOST
      - DATABASE_PORT=$DATABASE_PORT
      - DATABASE_USER=$DATABASE_USER
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
      - DATABASE_NAME=$DATABASE_NAME
    command: ["npm", "run", "start:dev"]
  frontend:
    build:
      context: .
      dockerfile: dockerfiles/angular.Dockerfile
    container_name: comics-platform-frontend
    depends_on:
      - backend
    ports:
      - "4200:4200"
    volumes:
      - ./comics-platform-frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: ["npm", "run", "start", "--", "--host", "0.0.0.0"]
  nginx:
    image: nginx:alpine
    container_name: comics-platform-nginx
    depends_on:
      - frontend
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
volumes:
  pg-data: